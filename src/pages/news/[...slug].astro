---
import { getCollection, getEntry } from 'astro:content';
import { Image } from 'astro:assets';
import PageLayout from '~/layouts/PageLayout.astro';
import { defaultLang } from '~/i18n/ui';

export async function getStaticPaths() {
  // Récupérer tous les articles en français (langue par défaut)
  const newsEntries = await getCollection('news', ({ data, slug }) => {
    // Accepter les articles avec data.language === 'fr' OU ceux qui sont dans le dossier fr/
    return (data.language === defaultLang || slug.startsWith(`${defaultLang}/`)) && !data.draft;
  });

  return newsEntries.map(entry => {
    // Extraire le slug sans le préfixe de langue
    const cleanSlug = entry.slug.includes('/') ? entry.slug.split('/').pop() : entry.slug;
    
    return {
      params: { slug: cleanSlug },
      props: { entry },
    };
  });
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Get the article in the other language (if available)
let translatedArticle = null;
try {
  // Chercher la traduction dans la langue non-par défaut (anglais)
  const otherLang = defaultLang === 'fr' ? 'en' : 'fr';
  const allNewsEntries = await getCollection('news', ({ data, slug }) => {
    return (data.language === otherLang || slug.startsWith(`${otherLang}/`)) && 
           data.translationKey === entry.data.translationKey;
  });
  
  if (allNewsEntries.length > 0) {
    translatedArticle = allNewsEntries[0];
    // Extraire le slug sans le préfixe de langue pour l'article traduit
    translatedArticle.cleanSlug = translatedArticle.slug.includes('/') 
      ? translatedArticle.slug.split('/').pop() 
      : translatedArticle.slug;
  }
} catch (error) {
  console.error('Error retrieving translation:', error);
}

// Get similar articles (same category)
const similarArticles = await getCollection('news', ({ data, slug }) => {
  return (data.language === defaultLang || slug.startsWith(`${defaultLang}/`)) && 
         !data.draft && 
         data.category === entry.data.category && 
         slug !== entry.slug;
});

// Sort similar articles by date and limit to 3
const relatedArticles = similarArticles
  .sort((a, b) => {
    const dateA = a.data.publishDate instanceof Date ? a.data.publishDate : new Date(a.data.publishDate);
    const dateB = b.data.publishDate instanceof Date ? b.data.publishDate : new Date(b.data.publishDate);
    return dateB.getTime() - dateA.getTime();
  })
  .slice(0, 3)
  .map(article => {
    // Extraire le slug sans le préfixe de langue pour chaque article similaire
    const cleanSlug = article.slug.includes('/') ? article.slug.split('/').pop() : article.slug;
    return { ...article, cleanSlug };
  });

// Format publication date
let publishDate = "";
try {
  const dateObject = entry.data.publishDate instanceof Date ? entry.data.publishDate : new Date(entry.data.publishDate);
  publishDate = new Intl.DateTimeFormat(defaultLang === 'fr' ? 'fr-FR' : 'en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }).format(dateObject);
} catch (error) {
  console.error("Error formatting date:", error);
  publishDate = defaultLang === 'fr' ? "Date non disponible" : "Date unavailable";
}

// Page metadata
const metadata = {
  title: entry.data.title,
  description: entry.data.description,
  openGraph: {
    type: 'article',
    images: entry.data.image ? [{ url: entry.data.image }] : undefined,
  },
};

// Labels selon la langue
const labels = defaultLang === 'fr' 
  ? { 
      similarArticles: "Articles similaires", 
      tags: "Tags :",
      englishVersion: "English version"
    }
  : { 
      similarArticles: "Similar Articles", 
      tags: "Tags:",
      englishVersion: "Version française"
    };
---

<PageLayout metadata={metadata}>
  <article class="mx-auto max-w-4xl px-4 py-12">
    <div class="mb-8 text-center">
      {entry.data.category && (
        <a 
          href={`/news/category/${entry.data.category.toLowerCase()}`}
          class="mb-4 inline-block rounded-full bg-slate-800/50 px-3 py-1 text-sm font-medium text-slate-300"
        >
          {entry.data.category}
        </a>
      )}
      
      <h1 class="mb-4 text-4xl font-bold text-white">{entry.data.title}</h1>
      
      <div class="mb-6 flex flex-wrap items-center justify-center gap-4 text-slate-400">
        <div class="flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          <span>{publishDate}</span>
        </div>
        
        {entry.data.author && (
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
            <span>{entry.data.author}</span>
          </div>
        )}
        
        {translatedArticle && (
          <a 
            href={`/${defaultLang === 'fr' ? 'en' : 'fr'}/news/${translatedArticle.cleanSlug}`} 
            class="flex items-center text-blue-400 hover:underline"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="mr-1 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129" />
            </svg>
            <span>{labels.englishVersion}</span>
          </a>
        )}
      </div>
    </div>
    
    {entry.data.image && (
      <div class="mb-8 overflow-hidden rounded-lg border border-slate-700">
        <img 
          src={entry.data.image} 
          alt={entry.data.imageAlt || entry.data.title} 
          class="h-auto w-full object-cover"
        />
      </div>
    )}
    
    <div class="prose prose-lg prose-invert mx-auto max-w-none 
      prose-headings:text-white 
      prose-h1:text-3xl prose-h1:font-bold prose-h1:border-b prose-h1:border-slate-700 prose-h1:pb-4 prose-h1:mb-6
      prose-h2:text-2xl prose-h2:font-bold prose-h2:text-blue-300 prose-h2:mt-8 prose-h2:mb-4
      prose-h3:text-xl prose-h3:font-semibold prose-h3:text-slate-200 prose-h3:mt-6 prose-h3:mb-3
      prose-p:text-slate-300 prose-p:leading-relaxed prose-p:my-4
      prose-a:text-blue-400 prose-a:no-underline prose-a:border-b prose-a:border-blue-400/30 prose-a:transition-colors hover:prose-a:border-blue-400 hover:prose-a:text-blue-300
      prose-strong:text-white prose-strong:font-semibold
      prose-em:text-slate-200 prose-em:italic
      prose-code:text-blue-300 prose-code:bg-slate-800 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm prose-code:font-mono
      prose-pre:bg-slate-800/80 prose-pre:border prose-pre:border-slate-700 prose-pre:rounded-lg prose-pre:overflow-x-auto
      prose-blockquote:border-l-4 prose-blockquote:border-blue-700 prose-blockquote:pl-4 prose-blockquote:py-1 prose-blockquote:my-4 prose-blockquote:bg-slate-800/50 prose-blockquote:rounded-r-lg prose-blockquote:italic
      prose-ol:text-slate-300 prose-ol:my-4 prose-ol:pl-5
      prose-ul:text-slate-300 prose-ul:my-4 prose-ul:pl-5
      prose-li:my-2
      prose-table:border-collapse prose-table:w-full
      prose-thead:bg-slate-800 prose-thead:text-white
      prose-th:p-3 prose-th:text-left prose-th:font-semibold
      prose-td:p-3 prose-td:border-t prose-td:border-slate-700
      prose-img:rounded-lg prose-img:border prose-img:border-slate-700 prose-img:my-6
      prose-hr:border-slate-700 prose-hr:my-8
      prose-figure:my-8
      prose-figcaption:text-sm prose-figcaption:text-slate-400 prose-figcaption:text-center prose-figcaption:mt-2
    ">
      <!-- Callout component for info boxes -->
      <style is:global>
        .callout {
          @apply my-6 rounded-lg border p-4;
        }
        .callout.info {
          @apply border-blue-700 bg-blue-900/20;
        }
        .callout.warning {
          @apply border-amber-700 bg-amber-900/20;
        }
        .callout.danger {
          @apply border-red-700 bg-red-900/20;
        }
        .callout.success {
          @apply border-green-700 bg-green-900/20;
        }
        .callout.tip {
          @apply border-purple-700 bg-purple-900/20;
        }
        .callout-title {
          @apply mb-2 flex items-center font-semibold;
        }
        .callout.info .callout-title {
          @apply text-blue-400;
        }
        .callout.warning .callout-title {
          @apply text-amber-400;
        }
        .callout.danger .callout-title {
          @apply text-red-400;
        }
        .callout.success .callout-title {
          @apply text-green-400;
        }
        .callout.tip .callout-title {
          @apply text-purple-400;
        }
        .callout-icon {
          @apply mr-2 h-5 w-5;
        }
        .callout-content {
          @apply text-slate-300;
        }
        
        /* Code block filename */
        .code-filename {
          @apply -mb-2 mt-4 block rounded-t-lg border border-b-0 border-slate-700 bg-slate-800 px-4 py-2 text-xs font-mono text-slate-400;
        }
        
        /* Image caption */
        .image-caption {
          @apply -mt-4 mb-6 block text-center text-sm text-slate-400;
        }
        
        /* Custom link button */
        .btn {
          @apply inline-flex items-center rounded-md border border-slate-700 bg-slate-800 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-slate-700 hover:text-white hover:border-slate-600;
        }
        
        /* Two-column layout */
        .two-columns {
          @apply mt-6 grid gap-6 md:grid-cols-2;
        }
        
        /* Card component */
        .card {
          @apply overflow-hidden rounded-lg border border-slate-700 bg-slate-900;
        }
        .card-header {
          @apply border-b border-slate-700 bg-slate-800 p-4 font-semibold text-white;
        }
        .card-body {
          @apply p-4 text-slate-300;
        }
        
        /* Tabs component */
        .tabs {
          @apply mt-6 mb-6;
        }
        .tabs-header {
          @apply flex border-b border-slate-700;
        }
        .tab-button {
          @apply -mb-px border-b-2 border-transparent px-4 py-2 text-sm font-medium text-slate-400 hover:text-slate-300;
        }
        .tab-button.active {
          @apply border-blue-500 text-blue-400;
        }
        .tab-content {
          @apply p-4;
        }
        
        /* Timeline component */
        .timeline {
          @apply relative mt-6 border-l border-slate-700 pl-6;
        }
        .timeline-item {
          @apply mb-6 relative;
        }
        .timeline-item::before {
          content: "";
          @apply absolute -left-[25px] top-2 h-4 w-4 rounded-full border border-slate-700 bg-slate-800;
        }
        .timeline-date {
          @apply mb-1 text-sm font-semibold text-blue-400;
        }
        .timeline-content {
          @apply text-slate-300;
        }
      </style>
      
      <Content />
    </div>
    
    {entry.data.tags && entry.data.tags.length > 0 && (
      <div class="mt-8 border-t border-slate-700 pt-8">
        <h3 class="mb-4 text-lg font-semibold text-white">{labels.tags}</h3>
        <div class="flex flex-wrap gap-2">
          {entry.data.tags.map((tag: string) => (
            <a 
              href={`/news/tag/${tag.toLowerCase()}`}
              class="rounded-full bg-slate-800 px-3 py-1 text-sm font-medium text-slate-300 transition-colors hover:bg-slate-700 hover:text-white"
            >
              #{tag}
            </a>
          ))}
        </div>
      </div>
    )}
    
    {relatedArticles.length > 0 && (
      <div class="mt-12 border-t border-slate-700 pt-8">
        <h2 class="mb-6 text-2xl font-bold text-white">{labels.similarArticles}</h2>
        <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {relatedArticles.map((article) => (
            <a href={`/news/${article.cleanSlug}`} class="group block overflow-hidden rounded-lg border border-slate-700 bg-slate-900 transition-all hover:border-blue-600 hover:shadow-lg">
              {article.data.image && (
                <div class="aspect-video overflow-hidden">
                  <img 
                    src={article.data.image} 
                    alt={article.data.imageAlt || article.data.title} 
                    class="h-full w-full object-cover transition-transform group-hover:scale-105"
                  />
                </div>
              )}
              <div class="p-4">
                <h3 class="mb-2 text-lg font-semibold text-white group-hover:text-blue-400">{article.data.title}</h3>
                <p class="text-sm text-slate-400">{article.data.description}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    )}
  </article>
</PageLayout>