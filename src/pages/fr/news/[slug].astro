---
import { getCollection, getEntry } from 'astro:content';
import { Image } from 'astro:assets';
import PageLayout from '~/layouts/PageLayout.astro';

export async function getStaticPaths() {
  const newsEntries = await getCollection('news', ({ data }) => {
    return data.language === 'fr' && !data.draft;
  });

  return newsEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Récupérer l'article dans l'autre langue (si disponible)
let translatedArticle = null;
try {
  const allNewsEntries = await getCollection('news', ({ data }) => {
    return data.language === 'en' && data.translationKey === entry.data.translationKey;
  });
  
  if (allNewsEntries.length > 0) {
    translatedArticle = allNewsEntries[0];
  }
} catch (error) {
  console.error('Erreur lors de la récupération de la traduction:', error);
}

// Récupérer des articles similaires (même catégorie)
const similarArticles = await getCollection('news', ({ data, slug }) => {
  return data.language === 'fr' && 
         !data.draft && 
         data.category === entry.data.category && 
         slug !== entry.slug;
});

// Trier les articles similaires par date et limiter à 3
const relatedArticles = similarArticles
  .sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime())
  .slice(0, 3);

// Formater la date de publication
let publishDate = "";
try {
  const dateObject = entry.data.publishDate instanceof Date ? entry.data.publishDate : new Date(entry.data.publishDate);
  publishDate = new Intl.DateTimeFormat('fr-FR', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }).format(dateObject);
} catch (error) {
  console.error("Error formatting date:", error);
  publishDate = "Date non disponible";
}

// Métadonnées de la page
const metadata = {
  title: entry.data.title,
  description: entry.data.description,
  openGraph: {
    type: 'article',
    images: entry.data.image ? [{ url: entry.data.image }] : undefined,
  },
};
---

<PageLayout metadata={metadata}>
  <article class="mx-auto max-w-4xl px-4 py-12">
    <div class="mb-8 text-center">
      {entry.data.category && (
        <a 
          href={`/fr/news/category/${entry.data.category.toLowerCase()}`}
          class="mb-4 inline-block rounded-full bg-slate-800/50 px-3 py-1 text-sm font-medium text-slate-300"
        >
          {entry.data.category}
        </a>
      )}
      
      <h1 class="mb-4 text-4xl font-bold text-white">{entry.data.title}</h1>
      
      <div class="mb-6 flex flex-wrap items-center justify-center gap-4 text-slate-400">
        <div class="flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          <span>{publishDate}</span>
        </div>
        
        {entry.data.author && (
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
            <span>{entry.data.author}</span>
          </div>
        )}
        
        {translatedArticle && (
          <a 
            href={`/en/news/${translatedArticle.slug}`} 
            class="flex items-center text-blue-400 hover:underline"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="mr-1 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129" />
            </svg>
            <span>English version</span>
          </a>
        )}
      </div>
    </div>
    
    {entry.data.image && (
      <div class="mb-8 overflow-hidden rounded-lg border border-slate-700">
        <img 
          src={entry.data.image} 
          alt={entry.data.imageAlt || entry.data.title} 
          class="h-auto w-full object-cover"
        />
      </div>
    )}
    
    <div class="prose prose-lg prose-invert mx-auto max-w-none prose-headings:text-white prose-p:text-slate-300 prose-a:text-blue-400">
      <Content />
    </div>
    
    {entry.data.tags && entry.data.tags.length > 0 && (
      <div class="mt-8 border-t border-slate-700 pt-8">
        <h3 class="mb-4 text-lg font-semibold text-white">Tags :</h3>
        <div class="flex flex-wrap gap-2">
          {entry.data.tags.map((tag: string) => (
            <a 
              href={`/fr/news/tag/${tag.toLowerCase()}`}
              class="rounded-full bg-slate-800 px-3 py-1 text-sm font-medium text-slate-300 transition-colors hover:bg-slate-700 hover:text-white"
            >
              #{tag}
            </a>
          ))}
        </div>
      </div>
    )}
    
    {relatedArticles.length > 0 && (
      <div class="mt-12 border-t border-slate-700 pt-8">
        <h2 class="mb-6 text-2xl font-bold text-white">Articles similaires</h2>
        <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {relatedArticles.map((article) => (
            <a href={`/fr/news/${article.slug}`} class="group block overflow-hidden rounded-lg border border-slate-700 bg-slate-900 transition-all hover:border-blue-600 hover:shadow-lg">
              {article.data.image && (
                <div class="aspect-video overflow-hidden">
                  <img 
                    src={article.data.image} 
                    alt={article.data.imageAlt || article.data.title} 
                    class="h-full w-full object-cover transition-transform group-hover:scale-105"
                  />
                </div>
              )}
              <div class="p-4">
                <h3 class="mb-2 text-lg font-semibold text-white group-hover:text-blue-400">{article.data.title}</h3>
                <p class="text-sm text-slate-400">{article.data.description}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    )}
  </article>
</PageLayout>