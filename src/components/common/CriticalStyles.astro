---
// Composant pour gérer les styles critiques
---

<style is:inline>
  /* Styles critiques de base */
  body {
    margin: 0;
    padding: 0;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
  }

  /* Styles critiques pour GameFeaturePanel */
  [data-aos] {
    opacity: 1;
    transform: translateY(0);
  }

  /* Autres styles critiques nécessaires pour le premier affichage */
  .max-w-6xl {
    max-width: 72rem;
  }
  .mx-auto {
    margin-left: auto;
    margin-right: auto;
  }
  .flex {
    display: flex;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .gap-8 {
    gap: 2rem;
  }
  .text-center {
    text-align: center;
  }
</style>

<script is:inline>
  // Script pour charger les CSS de manière asynchrone
  document.addEventListener('DOMContentLoaded', () => {
    // Fonction pour charger les CSS de manière asynchrone
    const loadStylesheets = () => {
      // Sélectionne tous les liens CSS standards
      const stylesheets = document.querySelectorAll('link[rel="stylesheet"]');
      
      // Pour chaque feuille de style
      stylesheets.forEach(stylesheet => {
        // Si le lien contient GameFeaturePanel ou terms, on le modifie
        if (stylesheet.href.includes('GameFeaturePanel') || stylesheet.href.includes('terms')) {
          const href = stylesheet.href;
          
          // Créer un nouveau lien avec preload
          const preloadLink = document.createElement('link');
          preloadLink.rel = 'preload';
          preloadLink.as = 'style';
          preloadLink.href = href;
          preloadLink.onload = function() {
            this.onload = null;
            this.rel = 'stylesheet';
          };
          
          // Remplacer l'ancien lien par le nouveau
          stylesheet.parentNode.replaceChild(preloadLink, stylesheet);
        }
      });
    };
    
    // Exécuter la fonction
    loadStylesheets();
  });
</script>