---
import { Icon } from 'astro-icon/components';
import type { FAQItem } from '~/types';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  items: Array<FAQItem>;
  columns?: number;
  classes?: Record<string, string>;
}
const {
  title = '',
  subtitle = '',
  tagline = '',
  items = [],
  columns = 2,
  classes = {},
} = Astro.props;
---

<section class="relative py-16 md:py-20">
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 -mb-12">
    <div class="mb-10 md:mx-auto text-center md:mb-12 max-w-3xl">
      {tagline && (
        <p
          class="text-base text-primary dark:text-blue-200 font-semibold tracking-wide uppercase"
          set:html={tagline}
        />
      )}
      {title && (
        <h2
          class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
          set:html={title}
        />
      )}
      {subtitle && (
        <p class="max-w-3xl mx-auto sm:text-center text-xl text-muted dark:text-slate-400" set:html={subtitle} />
      )}
    </div>
    <div class="mx-auto max-w-6xl">
      <div class="faq-grid">
        <div class="faq-column left-column">
          {items
            .filter((_, index) => index % 2 === 0)
            .map((item, index) => (
              <div class="faq-wrapper mb-6">
                <div class="faq-item" id={`faq-left-${index}`}>
                  <div class="bg-white dark:bg-slate-900 rounded-lg shadow-md hover:shadow-lg transition duration-300 p-5">
                    <button class="faq-button w-full flex justify-between items-center cursor-pointer">
                      <h3 class="text-lg font-medium text-left">{item.title}</h3>
                      <span class="faq-icon">
                        <Icon name="tabler:chevron-down" class="w-5 h-5 text-primary dark:text-blue-300" />
                      </span>
                    </button>
                    <div class="faq-content">
                      <div class="mt-4 text-muted dark:text-slate-400">
                        <p set:html={item.description} />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
        </div>
        <div class="faq-column right-column">
          {items
            .filter((_, index) => index % 2 === 1)
            .map((item, index) => (
              <div class="faq-wrapper mb-6">
                <div class="faq-item" id={`faq-right-${index}`}>
                  <div class="bg-white dark:bg-slate-900 rounded-lg shadow-md hover:shadow-lg transition duration-300 p-5">
                    <button class="faq-button w-full flex justify-between items-center cursor-pointer">
                      <h3 class="text-lg font-medium text-left">{item.title}</h3>
                      <span class="faq-icon">
                        <Icon name="tabler:chevron-down" class="w-5 h-5 text-primary dark:text-blue-300" />
                      </span>
                    </button>
                    <div class="faq-content">
                      <div class="mt-4 text-muted dark:text-slate-400">
                        <p set:html={item.description} />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .faq-grid {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  @media (min-width: 768px) {
    .faq-grid {
      flex-direction: row;
    }
    
    .faq-column {
      flex: 1;
    }
    
    .left-column {
      margin-right: 0.75rem;
    }
    
    .right-column {
      margin-left: 0.75rem;
    }
  }
  
  .faq-wrapper {
    width: 100%;
  }
  
  .faq-item {
    width: 100%;
  }
  
  .faq-button {
    padding: 0.5rem 0;
    background: none;
    border: none;
    outline: none;
    text-align: left;
    width: 100%;
  }
  
  .faq-content {
    display: none;
    width: 100%;
    color: #64748b; /* slate-500 */
  }
  
  .dark .faq-content {
    color: #94a3b8; /* slate-400 en mode sombre */
  }
  
  .faq-icon {
    transition: transform 0.3s ease;
  }
  
  .faq-item.active .faq-icon {
    transform: rotate(180deg);
  }
  
  .faq-item.active .faq-content {
    display: block;
    animation: fadeIn 0.3s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
</style>

<script is:inline>
  // Fonction d'initialisation des FAQs
  function initFAQs() {
    // Supprimer les SVG indésirables
    document.querySelectorAll('svg').forEach(svg => {
      if (!svg.closest('.faq-button')) {
        svg.style.display = 'none';
      }
    });
    
    // Gérer les clics sur les boutons FAQ
    document.querySelectorAll('.faq-button').forEach(button => {
      // Supprimer les écouteurs d'événements existants pour éviter les doublons
      button.removeEventListener('click', handleFAQClick);
      // Ajouter le nouvel écouteur
      button.addEventListener('click', handleFAQClick);
    });
  }

  // Fonction de gestion des clics
  function handleFAQClick(e) {
    e.preventDefault();
    e.stopPropagation();
        
    // Récupérer l'élément FAQ parent
    const faqItem = this.closest('.faq-item');
        
    // Basculer la classe active sur cet élément uniquement
    faqItem.classList.toggle('active');
  }
  
  // Initialiser les FAQs au chargement de la page
  document.addEventListener('DOMContentLoaded', initFAQs);
  
  // Réinitialiser les FAQs après la navigation (pour Astro View Transitions)
  document.addEventListener('astro:page-load', initFAQs);
  // Fermer tous les accordéons lors du redimensionnement
  window.addEventListener('resize', () => {
    document.querySelectorAll('.faq-item').forEach(item => {
      item.classList.remove('active');
    });
  });
</script>